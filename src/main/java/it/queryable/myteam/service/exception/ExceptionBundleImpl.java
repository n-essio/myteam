package it.queryable.myteam.service.exception;

import  it.queryable.api.qeex.annotations.QeexConfig;
import  it.queryable.api.qeex.exceptions.QeexWebException;
import  it.queryable.api.qeex.interceptors.LanguageInterceptor;

import jakarta.annotation.Generated;
import jakarta.enterprise.context.ApplicationScoped;
import jakarta.inject.Inject;

@ApplicationScoped
@Generated(value = "dev.queryable.QuexGenerator", date = "2023-11-07T09:31:50.944837274", comments = "don't touch please")
public class ExceptionBundleImpl implements ExceptionBundle {

// copied from application properties: qeex.project=FLW
String classProjectName = "FLW";

@Inject
QeexConfig qeexConfig;

@Inject
LanguageInterceptor languageInterceptor;

    @Override
    public QeexWebException simpleException() {
            // from annotation  @QeexMessage(message="prova")
            //this id IS AUTOMATICALLY GENERATED by method position inside interface
            int _id = 101;
            int _code = 500;
            String message = "prova";
            String language = languageInterceptor.getLanguage() != null? languageInterceptor.getLanguage() : "en";
            return QeexWebException.builder(qeexConfig.get_project(classProjectName))
                .id(_id)
                .code(_code)
                .message(message)
                .language(language);
        }

    @Override
    public QeexWebException completeException() {
            // from annotation  @QeexMessage(id=102,code=400,message=" complete e ricmplete")
            //this id IS AUTOMATICALLY GENERATED by method position inside interface
            int _id = 102;
            int _code = 400;
            String message = " complete e ricmplete";
            String language = languageInterceptor.getLanguage() != null? languageInterceptor.getLanguage() : "en";
            return QeexWebException.builder(qeexConfig.get_project(classProjectName))
                .id(_id)
                .code(_code)
                .message(message)
                .language(language);
        }

    @Override
    public QeexWebException notOverrideException() {
            // from annotation  @QeexMessage(id=103,code=500,message="non sovrascitto")
            //this id IS AUTOMATICALLY GENERATED by method position inside interface
            int _id = 103;
            int _code = 500;
            String message = "non sovrascitto";
            String language = languageInterceptor.getLanguage() != null? languageInterceptor.getLanguage() : "en";
            return QeexWebException.builder(qeexConfig.get_project(classProjectName))
                .id(_id)
                .code(_code)
                .message(message)
                .language(language);
        }

    @Override
    public QeexWebException withArguments(String one, String two) {
            // from annotation  @QeexMessage(id=104,code=500,message="one: %s - two: %s")
            //this id IS AUTOMATICALLY GENERATED by method position inside interface
            int _id = 104;
            int _code = 500;
            String message = String.format("one: %s - two: %s",one,two);
            String language = languageInterceptor.getLanguage() != null? languageInterceptor.getLanguage() : "en";
            return QeexWebException.builder(qeexConfig.get_project(classProjectName))
                .id(_id)
                .code(_code)
                .message(message)
                .language(language);
        }


}